#pragma checksum "C:\C#TUTORIAL\Pages\Records_learn.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "043c52717d760944ab70fff88b17a0bbc09662ac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(C_TUTORIAL.Pages.Pages_Records_learn), @"mvc.1.0.razor-page", @"/Pages/Records_learn.cshtml")]
namespace C_TUTORIAL.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\C#TUTORIAL\Pages\_ViewImports.cshtml"
using C_TUTORIAL;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"043c52717d760944ab70fff88b17a0bbc09662ac", @"/Pages/Records_learn.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e3c987eef8e67713cc41d4d02eb288681eef6ce", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Records_learn : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/stylesheet.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\C#TUTORIAL\Pages\Records_learn.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n     ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "043c52717d760944ab70fff88b17a0bbc09662ac3720", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <div class=""scroll"">
        <center></br></br><h3>Introduction to record types in C#</h3></center>
        <p class=""f_size"">A record in C# is a class or struct that provides special syntax and behavior for working with data models.</p></br>

        <h5>When to use records</h5></br>

        <p class=""f_size"">Consider using a record in place of a class or struct in the following scenarios:</p>

        <p class=""f_size"">&nbsp;&nbsp;&nbsp;<b>&#x2022;</b>You want to define a data model that depends on value equality.</br>
                    &nbsp;&nbsp;&nbsp;<b>&#x2022;</b>You want to define a type for which objects are immutable.</p>

        <b><h6>Value equality</h6></b></br>

        <p class=""f_size"">For records, value equality means that two variables of a record type are equal if the types match and all property
             and field values match. For other reference types such as classes, equality means reference equality. That is, two variables of
              a class type are");
            WriteLiteral(@" equal if they refer to the same object. Methods and operators that determine equality of two record instances 
              use value equality.</p>

        <p class=""f_size"">Not all data models work well with value equality. For example, Entity Framework Core depends on reference equality
             to ensure that it uses only one instance of an entity type for what is conceptually one entity. For this reason, record types 
             aren't appropriate for use as entity types in Entity Framework Core.</p>

        <b><h6>Immutability</h6></b></br>

        <p class=""f_size"">An immutable type is one that prevents you from changing any property or field values of an object after it's 
            instantiated. Immutability can be useful when you need a type to be thread-safe or you're depending on a hash code remaining the 
            same in a hash table. Records provide concise syntax for creating and working with immutable types.</p>

        <b><h6>How records differ from classes and s");
            WriteLiteral(@"tructs</h6></b>

        <p class=""f_size"">The same syntax that declares and instantiates classes or structs can be used with records. Just substitute the 
            class keyword with the record, or use record struct instead of struct. Likewise, the same syntax for expressing inheritance 
            relationships is supported by record classes. Records differ from classes in the following ways:</p>

        <p class=""f_size"">
                &nbsp;&nbsp;&nbsp;<b>&#x2002;</b>You can use positional parameters to create and instantiate a type with immutable properties.</br>
                &nbsp;&nbsp;&nbsp;<b>&#x2002;</b>The same methods and operators that indicate reference equality or inequality in classes (such as Object.Equals(Object) and ==), indicate value equality or inequality in records.</br>
                &nbsp;&nbsp;&nbsp;<b>&#x2002;</b>You can use a with expression to create a copy of an immutable object with new values in selected properties.</br>
                &nbsp;&nbsp;&nbsp;<");
            WriteLiteral(@"b>&#x2002;</b>A record's ToString method creates a formatted string that shows an object's type name and the names and values of all its public properties.
        </p>

        <h6>Example:</h6>

        <p class=""f_size"">&nbsp;&nbsp;&nbsp;public record Pet {</br>
	            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public string Name {get; set;}</br>
	            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public int Age{get; set;}</br>
                &nbsp;&nbsp;&nbsp;}</p>
        
    <div data-pym-src=""https://www.jdoodle.com/embed/v0/4V7T""></div>

    <script src=""https://www.jdoodle.com/assets/jdoodle-pym.min.js"" type=""text/javascript"">
    </script>
    </div>
    
	

      
    
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Records_learn> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Records_learn> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Records_learn>)PageContext?.ViewData;
        public Records_learn Model => ViewData.Model;
    }
}
#pragma warning restore 1591
